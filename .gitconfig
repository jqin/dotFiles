[alias]
    dh = diff --color-words head
    dl = "!git ll -1"
    dc = diff --cached

    # find file path in codebase
    f = "!git ls-files | grep -i"

    # see all commits related to a file
    filelog = log -u
    fl = log -u

    # grep entire codebase
    grep = grep -Ii

    # list commits
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate

    ci = commit
    co = checkout
    cm = commit -m
    d = diff --color-words
    st = status

    # stash related
    sl = "!git --no-pager stash list"
    ss = stash save
    sp = stash pop

    alias = !git config --list | grep 'alias' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort
    la = "!git config -l | grep alias | cut -c 7-"
    stash-rename = "!_() { rev=$(git rev-parse $1) && git stash drop $1 || exit 1 ; git diff-index --quiet HEAD; s=$?; [ $s != 0 ] && git stash save \"tmp stash from stash-rename\"; git stash apply $rev && shift && git stash save \"$@\" && [ $s != 0 ] && git stash pop stash@{1}; }; _"
    lgb = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --abbrev-commit --date=relative --branches
    personalprofile = config user.email \"jay@jayqin.com\"

[user]
    name = Jay Qin
    email = jay@jayqin.com

[core]
    editor = /usr/bin/vim
    excludesfile = ~/.gitignore

[push]
    default = simple

[filter "lfs"]
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f
    required = true
